import Head from 'next/head'
import { useEffect, useState } from 'react'
import { fetchData } from '../libs/FethData';
import { GetHistorica, SeenHistorica } from '../libs/GetHistoricaData';

import html2canvas from 'html2canvas';
import { generateRandomNumber } from '@/libs/RandomNumber';

export default function Home() {

  const [historica, setHistorica] = useState();

  useEffect(() => {

    const AirtableData = async () => {

      const validateToday = await fetchData(`https://api.airtable.com/v0/app6QkHya20rCFqu4/tblVznChX1OvuPF89?filterByFormula=Date="2023-03-07"`, {
        headers: {
          "Content-Type": "application/json",
          "Authorization": `Bearer ${process.env.NEXT_PUBLIC_AIRTABLE_TOKEN}`
        }
      });

      if (validateToday.records.length == 0) {

            let IdRandom = generateRandomNumber(1, 21);

            const result = await fetchData("https://api.airtable.com/v0/app6QkHya20rCFqu4/tblVznChX1OvuPF89", {
            method: "POST",
            headers: {
                "Content-Type": "application/json",
                "Authorization": `Bearer ${process.env.NEXT_PUBLIC_AIRTABLE_TOKEN}`
            },
            body: JSON.stringify({
                "records": [
                    {
                        "fields": {
                            IdHistorica: IdRandom,
                            Date: new Date().toJSON().slice(0,10)
                        }
                    }
                ]
            })
        })

        GetHistorica(result.records[0].fields.IdHistorica, setHistorica);

      } else {
        GetHistorica(validateToday.records[0].fields.IdHistorica, setHistorica);
      }

    }
    AirtableData();

  }, []);

  const share = async (event) => {

    let elementHTML = event.target.parentElement.childNodes[0]

    const canvasStory = await html2canvas(elementHTML, {
      letterRendering: 1,
      allowTaint: true,
      useCORS: true,
    });

    // document.body.appendChild(canvasStory);

    const dataUrl = canvasStory.toDataURL();
    const blob = await (await fetch(dataUrl)).blob();

    const filesArray = [
      new File(
        [blob],
        'historica.png',
        {
          type: blob.type,
          lastModified: new Date().getTime()
        }
      )
    ];

    const shareData = {
      title: "La Histórica del día",
      text: `La histórica del día es: ${historica.fields.fullname} 💜 encuentra más información en 👇`,
      url: 'https://historicas.vercel.app/'
    };

    navigator.share(shareData);
  }

  const download = async (event) => {

    let elementHTML = event.target.parentElement.childNodes[0]

    const canvasStory = await html2canvas(elementHTML, {
      letterRendering: 1,
      allowTaint: true,
      useCORS: true,
    });

    const dataUrl = canvasStory.toDataURL();
    const blob = await (await fetch(dataUrl)).blob();

    const filesArray = [
      new File(
        [blob],
        'historica.png',
        {
          type: blob.type,
          lastModified: new Date().getTime()
        }
      )
    ];

    let link = document.createElement('a');
    link.download = 'historica.png';
    link.href = dataUrl;
    link.click();
  }

  return (
    <>
      <Head>
        <title>Históricas {historica && `| ${historica.fields.fullname}`}</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
      </Head>
      <main>
        <section style={{ width: '400px', margin: '0 auto' }}>
          <div id='capture'>
            {
              historica && (
                <>
                  <img width={250} src={historica.fields.photo} alt={historica.fields.fullname} />
                  <h1>{historica.fields.fullname}</h1>
                  <img
                    src={`https://flagcdn.com/w80/${historica.fields.country.toLocaleLowerCase()}.png`}
                    alt={historica.fields.country} />
                  <p>{historica.fields.description}</p>
                </>
              )
            }
          </div>
          <button onClick={(event) => share(event)}>Compartir</button>
          <button onClick={(event) => download(event)}>Descargar</button>
        </section>
        <section id="result"></section>
      </main>
    </>
  )
}
